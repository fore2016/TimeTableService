package com.yg.timetableservice.rxjava;


import com.alibaba.fastjson.JSONArray;
import rx.functions.Func1;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class GetTurnsMapper implements Func1<Object, JSONArray> {
    private long timestamp;
    /**
     * adjust yesterday turns add one day
     * @param turn
     * return [Calendar, Calendar, Accuracy]
     */
    private JSONArray adjustTurnArriveTime(JSONArray turn) {
        String departTime = turn.getString(0);
        String arriveTime = turn.getString(1);
        double accuracy = turn.getDouble(2);
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Calendar departCalendar = Calendar.getInstance();
        try {
            departCalendar.setTime(sdf.parse(departTime));
        } catch (ParseException e) {
            return null;
        }
        Calendar arriveCalendar = Calendar.getInstance();
        try {
            arriveCalendar.setTime(sdf.parse(arriveTime));
        } catch (ParseException e) {
            return null;
        }
        Calendar currentTime = Calendar.getInstance();
        if (departCalendar.get(Calendar.DAY_OF_YEAR) == currentTime.get(Calendar.DAY_OF_YEAR) - 1) {
            departCalendar.add(Calendar.DAY_OF_YEAR, 1);
            arriveCalendar.add(Calendar.DAY_OF_YEAR, 1);
        }
        JSONArray result = new JSONArray();
        result.add(departCalendar);
        result.add(arriveCalendar);
        result.add(accuracy);
        return result;
    }
    @Override
    public JSONArray call(Object o) {
        if (!(o instanceof JSONArray))
            return new JSONArray();
        JSONArray allTurns = (JSONArray) o;
        JSONArray vaildTurns = new JSONArray();
        Calendar queryTime = Calendar.getInstance();
        queryTime.setTime(new Date(timestamp * 1000));
        for (Object ob : allTurns) {
            if (ob instanceof JSONArray) {
                JSONArray adjustTurn = adjustTurnArriveTime((JSONArray)ob);
                if (adjustTurn != null) {
                    Calendar arriveTime = (Calendar)adjustTurn.get(1);
                    if (arriveTime.after(queryTime))
                        vaildTurns.add(adjustTurn);
                }
            }
        }
        return vaildTurns;
    }

    public GetTurnsMapper(long timestamp) {
        this.timestamp = timestamp;
    }


}
